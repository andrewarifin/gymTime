/* tslint:disable:no-implicit-dependencies */
/**
 * BrowserHelper tests
 */

Object.defineProperty(navigator, "platform", {
  value: "iPhone",
  writable: true
});

import { test } from "ava";
import { BrowserHelper } from "scandit-sdk";

test("checkBrowserCompatibility", t => {
  (<any>window).Blob = null;

  t.deepEqual(BrowserHelper.checkBrowserCompatibility(), {
    fullSupport: false,
    missingFeatures: ["mediaDevices", "webWorkers", "webAssembly", "blob", "urlObject"],
    scannerSupport: false
  });
  (<any>navigator).mediaDevices = {
    getUserMedia: () => {
      return;
    }
  };
  t.deepEqual(BrowserHelper.checkBrowserCompatibility(), {
    fullSupport: false,
    missingFeatures: ["webWorkers", "webAssembly", "blob", "urlObject"],
    scannerSupport: false
  });
  (<any>window).Worker = () => {
    return;
  };
  t.deepEqual(BrowserHelper.checkBrowserCompatibility(), {
    fullSupport: false,
    missingFeatures: ["webAssembly", "blob", "urlObject"],
    scannerSupport: false
  });
  (<any>window).WebAssembly = {};
  t.deepEqual(BrowserHelper.checkBrowserCompatibility(), {
    fullSupport: false,
    missingFeatures: ["blob", "urlObject"],
    scannerSupport: false
  });
  (<any>window).Blob = () => {
    return;
  };
  t.deepEqual(BrowserHelper.checkBrowserCompatibility(), {
    fullSupport: false,
    missingFeatures: ["urlObject"],
    scannerSupport: false
  });
  (<any>window).URL = {
    createObjectURL: () => {
      return;
    }
  };
  t.deepEqual(BrowserHelper.checkBrowserCompatibility(), {
    fullSupport: true,
    missingFeatures: [],
    scannerSupport: true
  });
  BrowserHelper.userAgentInfo.setUA(
    "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_5 like Mac OS X) " +
      "AppleWebKit/604.5.6 (KHTML, like Gecko) Version/11.0 Mobile/15D60 Safari/604.1"
  );
  t.deepEqual(BrowserHelper.checkBrowserCompatibility(), {
    fullSupport: false,
    missingFeatures: ["webAssemblyErrorFree"],
    scannerSupport: false
  });
  BrowserHelper.userAgentInfo.setUA(
    "Mozilla/5.0 (iPhone; CPU iPhone OS 11_3 like Mac OS X) " +
      "AppleWebKit/605.1.15 (KHTML, like Gecko) Version / 11.0 Mobile / 15E148 Safari / 604.1"
  );
  t.deepEqual(BrowserHelper.checkBrowserCompatibility(), {
    fullSupport: true,
    missingFeatures: [],
    scannerSupport: true
  });
  (<any>navigator).mediaDevices = undefined;
  t.deepEqual(BrowserHelper.checkBrowserCompatibility(), {
    fullSupport: false,
    missingFeatures: ["mediaDevices"],
    scannerSupport: true
  });
});

test("getDeviceId", t => {
  const currentDeviceId: string = BrowserHelper.getDeviceId();
  t.regex(currentDeviceId, /[0-9a-f]{40}/);
  t.deepEqual(BrowserHelper.getDeviceId(), currentDeviceId);
});
