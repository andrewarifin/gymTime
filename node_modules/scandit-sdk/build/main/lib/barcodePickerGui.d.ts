import { BarcodePicker } from "./barcodePicker";
import { CameraManager } from "./cameraManager";
import { Scanner } from "./scanner";
/**
 * @hidden
 */
export declare class BarcodePickerGui {
    static readonly grandParentElementClassName: string;
    static readonly parentElementClassName: string;
    static readonly hiddenClassName: string;
    static readonly hiddenOpacityClassName: string;
    static readonly videoElementClassName: string;
    static readonly scanditLogoImageElementClassName: string;
    static readonly laserImageElementClassName: string;
    static readonly viewfinderElementClassName: string;
    static readonly cameraSwitcherElementClassName: string;
    static readonly torchTogglerElementClassName: string;
    static readonly cameraUploadElementClassName: string;
    static readonly flashColorClassName: string;
    static readonly flashWhiteClassName: string;
    static readonly flashWhiteInsetClassName: string;
    static readonly opacityPulseClassName: string;
    static readonly mirroredClassName: string;
    static readonly pausedClassName: string;
    readonly videoElement: HTMLVideoElement;
    readonly cameraSwitcherElement: HTMLImageElement;
    readonly torchTogglerElement: HTMLImageElement;
    private readonly scanner;
    private readonly singleImageMode;
    private readonly grandParentElement;
    private readonly parentElement;
    private readonly laserActiveImageElement;
    private readonly laserPausedImageElement;
    private readonly viewfinderElement;
    private readonly cameraUploadElement;
    private readonly cameraUploadInputElement;
    private readonly cameraUploadLabelElement;
    private readonly cameraUploadProgressElement;
    private readonly videoImageCanvasContext;
    private readonly visibilityListener;
    private readonly resizeInterval;
    private readonly cameraUploadCallback;
    private cameraManager?;
    private originElement;
    private scanningPaused;
    private visible;
    private guiStyle;
    private videoFit;
    private mirrorImage;
    private lastKnownElementWidth;
    private lastKnownElementHeight;
    constructor(scanner: Scanner, originElement: HTMLElement, singleImageMode: boolean, scanningPaused: boolean, visible: boolean, guiStyle: BarcodePicker.GuiStyle, videoFit: BarcodePicker.ObjectFit, cameraUploadCallback: () => Promise<void>);
    destroy(): void;
    setCameraManager(cameraManager: CameraManager): void;
    pauseScanning(): void;
    resumeScanning(): void;
    isVisible(): boolean;
    setVisible(visible: boolean): void;
    isMirrorImageEnabled(): boolean;
    setMirrorImageEnabled(enabled: boolean): void;
    setGuiStyle(guiStyle: BarcodePicker.GuiStyle): void;
    setVideoFit(objectFit: BarcodePicker.ObjectFit): void;
    reassignOriginElement(originElement: HTMLElement): void;
    flashGUI(): void;
    getVideoImageData(): Uint8ClampedArray | undefined;
    getVideoCurrentTime(): number;
    setCameraSwitcherVisible(visible: boolean): void;
    setTorchTogglerVisible(visible: boolean): void;
    private setCameraUploadGuiAvailable;
    private setupVideoElement;
    private setupSharedAssets;
    private setupCameraUploadGuiAssets;
    private setupFullGuiAssets;
    private flashLaser;
    private flashViewfinder;
    private resizeIfNeeded;
    private resizeCameraUploadIfNeeded;
    private resizeVideoIfNeeded;
    private checkAndRecoverPlayback;
    private cameraUploadFileProcess;
    private cameraUploadFile;
    private setupCameraSwitcher;
    private setupTorchToggler;
}
